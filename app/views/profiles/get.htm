<div id="profile_massage"></div>
<form action="/profiles/manage" enctype="multipart/form-data"
      method="POST" name="profile_add">
  <span class="fieldset">Анкета заполняется на английском языке. Все
  поля, отмеченные звездочкой (*) обязательны для заполнения.Правила
  заполнения анкет <a href="/help">здесь</a>.</span>
  <fieldset> 
    <input name="id"       id="id"       type="hidden" value="{{ @persone->id }}" />
    <legend>Contact Details</legend>
    <ol>
      <li>
        <label class="mandatory"  for="first_name">First Name</label>
        <input class="mandatory" name="first_name" required
               id="first_name" type="text" value="{{ @persone->first_name }}" />
      </li>
      <li>    
        <label class="mandatory"  for="last_name">Last Name</label>
        <input class="mandatory" name="last_name" required
               id="last_name" type="text" value="{{ @persone->last_name }}" />
      </li>
      <li>
        <label class="mandatory"  for="birthday">Birthday</label>
        <input class="mandatory" name="birthday"
               placeholder="YYYY-MM-DD" pattern="^(19|20)\d\d-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
               title="Enter your birthday in format yyyy-mm-dd" required
               id="birthday" type="date" value="{{ @persone->birthday }}" />
      </li>
    </ol>
  </fieldset>
  
  <fieldset>
    <legend>Appearens</legend>  
    <ol>
      <li>
        <label class="mandatory"  for="height">Height</label>
        <input class="mandatory" name="height" type="number"
               min="50" max="250" pattern="[0-9]{2,3}" required
               value="{{ @persone->height }}" />
      </li>
      <li>
        <label class="mandatory"  for="weight">Weight</label>
        <input class="mandatory" name="weight" type="number"
               min="30" max="200" pattern="[0-9]{2,3}" required
               value="{{ @persone->weight }}" />
      </li>
      <li>
        <label class="mandatory"  for="eyes">Eyes</label>
        <select class="mandatory" name="eyes" required>
          <option value="">Select</option>
          <option value="brown" {{ @persone->eyes == 'brown'?'selected="selected"':'' }}>brown</option>
          <option value="blue"  {{ @persone->eyes == 'blue'?'selected="selected"':'' }}>blue</option>
          <option value="green" {{ @persone->eyes == 'green'?'selected="selected"':'' }}>green</option>
          <option value="grey"  {{ @persone->eyes == 'grey'?'selected="selected"':'' }}>grey</option>
          <option value="hazel" {{ @persone->eyes == 'hazel'?'selected="selected"':'' }}>hazel</option>
        </select>
      </li>
      <li>
        <label class="mandatory"  for="hair">Hair</label>
        <select class="mandatory" name="hair" required>
          <option value=''>Select</option>
          <option value='black' {{ @persone->hair == 'black'?'selected="selected"':'' }}>black</option>
          <option value='brown' {{ @persone->hair == 'brown'?'selected="selected"':'' }}>brown</option>
          <option value='light-brown' {{ @persone->hair == 'light-brown'?'selected="selected"':'' }}>light-brown</option>
          <option value='blond' {{ @persone->hair == 'blond'?'selected="selected"':'' }}>blond</option>
          <option value='red'   {{ @persone->hair == 'red'?'selected="selected"':'' }}>red</option>
          <option value='white' {{ @persone->hair == 'white'?'selected="selected"':'' }}>white</option>
          <option value='grey'  {{ @persone->hair == 'grey'?'selected="selected"':'' }}>grey</option>
          <option value='bald'  {{ @persone->hair == 'bald'?'selected="selected"':'' }}>bald</option>
        </select>
      </li>
    </ol>
  </fieldset>

  <fieldset>      
    <legend>Legend</legend>  
    <ol>
      <li>
        <label class="mandatory"  for="occupation">Occupation</label>
        <input class="mandatory" name="occupation"
               required
               type="text"  value="{{ @persone->occupation }}" />
      </li>
      <li>    
        <label class="mandatory"  for="education">Education</label>
        <select class="mandatory" name="education" required>
          <option value=''>Select</option>
          <option value='high school' {{ @persone->education == 'high school'?'selected="selected"':'' }}>high school</option>
          <option value='some college' {{ @persone->education == 'some college'?'selected="selected"':'' }}>some college</option>
          <option value='college' {{ @persone->education == 'college'?'selected="selected"':'' }}>college</option>
          <option value='graduate school' {{ @persone->education == 'graduate school'?'selected="selected"':'' }}>graduate school</option>
        </select>
      </li>
      <li>
        <label class="mandatory"  for="religion">Religion</label>
        <select  class="mandatory" name="religion" required>
          <option value=''>Select</option>
          <option value='Christianity' {{ @persone->religion == 'Christianity'?'selected="selected"':'' }}>Christianity</option>
          <option value='Catholic' {{ @persone->religion == 'Catholic'?'selected="selected"':'' }}>Catholic</option>
          <option value='Orthodoxy' {{ @persone->religion == 'Orthodoxy'?'selected="selected"':'' }}>Orthodoxy</option>
          <option value='Muslim' {{ @persone->religion == 'Muslim'?'selected="selected"':'' }}>Muslim</option>
          <option value='Buddhism' {{ @persone->religion == 'Buddhism'?'selected="selected"':'' }}>Buddhism</option>
          <option value='Judaism' {{ @persone->religion == 'Judaism'?'selected="selected"':'' }}>Judaism</option>
          <option value='Atheism' {{ @persone->religion == 'Atheism'?'selected="selected"':'' }}>Atheism</option>
          <option value='other' {{ @persone->religion == 'other'?'selected="selected"':'' }}>other</option>
        </select>
      </li>
      <li>
        <label class="mandatory"  for="martial_status">Marital
        Status</label>
        <select class="mandatory" name="martial_status" required>
          <option value=''>Select</option>
          <option value='never married' {{ @persone->martial_status == 'never married'?'selected="selected"':'' }}>never married</option>
          <option value='divorced' {{ @persone->martial_status == 'divorced'?'selected="selected"':'' }}>divorced</option>
          <option value='widowed' {{ @persone->martial_status == 'widowed'?'selected="selected"':'' }}>widowed</option>
        </select>
      </li>
      <li>    
        <label class="mandatory"  for="children">Children</label>
        <input class="mandatory" name="children" type="text"
               required
               value="{{ @persone->children }}" />
      </li>
      <li>
        <label class="mandatory"  for="language_spoken">Languages Spoken</label>
        <input class="mandatory" name="language_spoken"
               required
               type="text"  value="{{ @persone->language_spoken }}" />
      </li>
      <li>
        <label class="mandatory"  for="english_proficiency">English
        Proficiency</label>
        <select class="mandatory" name="english_proficiency" required>
          <option value=''>Select</option>
          <option value='basic' {{ @persone->english_proficiency == 'basic'?'selected="selected"':'' }}>basic</option>
          <option value='intermediate' {{ @persone->english_proficiency == 'intermediate'?'selected="selected"':'' }}>intermediate</option>
          <option value='good' {{ @persone->english_proficiency == 'good'?'selected="selected"':'' }}>good</option>
          <option value='excellent' {{ @persone->english_proficiency == 'excellent'?'selected="selected"':'' }}>excellent</option>
        </select>
      </li>
      <li>    
        <label class="mandatory"  for="smoking">Smoking</label>
        <select class="mandatory" name="smoking" required>
          <option value=''>Select</option>
          <option value='yes' {{ @persone->smoking == 'yes'?'selected="selected"':'' }}>yes</option>
          <option value='no'  {{ @persone->smoking == 'no'?'selected="selected"':'' }}>no</option>
        </select>
      </li>
      <li>
        <label class="mandatory"  for="looking_for_age">Looking for age</label>
        <input class="mandatory" name="looking_for_age"
               required
               type="text"  value="{{ @persone->looking_for_age }}" />
      </li>
    </ol>
  </fieldset>

  <fieldset>
    <legend>Contacts</legend>
    <ol>
      <li>
        <label class="mandatory"  for="city">City</label>
        <input class="mandatory" name="city" type="text"
               required
               value="{{ @persone->city }}" />
      </li>
      <li>
        <label class="mandatory"  for="country">Country</label>
        <input class="mandatory" name="country" type="text"
               required
               value="{{ @persone->country }}" />
      </li>
      <li class="wide">
        <fieldset>
          <ol>
            <li>
              <label class="mandatory"  for="phone">Phone</label>
              <input class="mandatory" name="phone"
                     required
                     type="tel"  value="{{ @persone->phone }}" />
            </li>
            <li>
              <label class="mandatory"  for="email">Email</label>
              <input class="mandatory" name="email"
                     required
                     type="email"  value="{{ @persone->email }}" />
            </li>
          </ol>
        </fieldset>
      </li>
      <li class="wide">
        <span>Адрес заполняется в последовательности: почтовый индекс,
        улица, номер дома, квартира.</span>
        <label    class="mandatory"  for="post_address">Post Address</label>
        <textarea class="mandatory" name="post_address" required>{{ @persone->post_address }}</textarea>
      </li>
    </ol>
  </fieldset>

  <fieldset>
    <legend>About</legend>  
    <ol>
      <li class="wide">
        <label    class="mandatory"  for="hobbies">My hobbies are</label>
        <textarea class="mandatory" name="hobbies" required>{{ @persone->hobbies }}</textarea>
      </li>
      <li class="wide">
        <label    class="mandatory"  for="about">More about me</label>
        <textarea class="mandatory" name="about" required>{{ @persone->about }}</textarea>
      </li>
      <li class="wide">
        <label    class="mandatory"  for="ideal_relationship">Ideal relationship</label>
        <textarea class="mandatory" name="ideal_relationship" required>{{ @persone->ideal_relationship }}</textarea>
      </li>
    </ol>
  </fieldset>

  <fieldset>
    <legend>Photos</legend>
    <span>В разделе Portrait фото должно быть размером 100x133
    пикселей и в формате JPEG.</span>
    <ol>
      <li>
        <label  for="portrait">Portrait</label>
        <check if="{{ @persone->portrait }}">
            <true>
                <div><img src='{{ @persone->portrait }}' width="100"/></div>
            </true>
            <false>
              <input id="portrait" name="portrait" type="file" />
            </false>
        </check>
      </li>
      <li>
        <label class="mandatory"  for="photo1">Photo 1</label>
        <check if="{{ @persone->photo1 }}">
            <true>
                <div><img src='{{ @persone->photo1 }}' width="250"/></div>
            </true>
            <false>
                <input id="photo1" class="mandatory" name="photo1" type="file" />
            </false>
        </check>
      </li>
      <li>
        <label  for="photo2">Photo 2</label>
        <check if="{{ @persone->photo2 }}">
            <true>
              <div><img src='{{ @persone->photo2 }}' width="250"/></div>
            </true>
            <false>
              <input id="photo2" name="photo2" type="file" />
            </false>
        </check>
      </li>
      <li>
        <label  for="photo3">Photo 3</label>
        <check if="{{ @persone->photo3 }}">
            <true>
              <div><img src='{{ @persone->photo3 }}' width="250"/></div>
            </true>
            <false>
              <input id="photo3" name="photo3" type="file" />
            </false>
        </check>
      </li>
      <li>
        <label  for="photo4">Photo 4</label>
        <check if="{{ @persone->photo4 }}">
            <true>
              <div><img src='{{ @persone->photo4 }}' width="250"/></div>
            </true>
            <false>
              <input id="photo4" name="photo4" type="file" />
            </false>
        </check>
      </li>
      <li>
        <label  for="photo5">Photo 5</label>
        <check if="{{ @persone->photo5 }}">
            <true>
              <div><img src='{{ @persone->photo5 }}' width="250"/></div>
            </true>
            <false>
              <input id="photo5" name="photo5" type="file" />
            </false>
        </check>
      </li>
    </ol>
  </fieldset>
  <fieldset>
    <legend>Passport</legend>
    <span>Вам необходимо загрузить цветную скан-копию страницы
    паспорта или другого идентификационного документа, в котором есть
    фотография девушки, ее фамилия, имя, дата рождения.ЦВЕТНАЯ копия
    должна быть размером не менее 600 пикселей в ширину.</span>
    <ol>
      <li>
        <label  for="passport">Passport Copy</label>
        <check if="{{ @persone->passport }}">
          <true>
            <div><img src='{{ @persone->passport }}' width="250"/></div>
          </true>
          <false>
            <input id="passport" name="passport" type="file" />
          </false>
        </check>
      </li>
    </ol>
  </fieldset>

  <fieldset class="submit">
    <span id="form_message" class="warning"></span>
    <input class="submit" type="submit" value="Save Profile" />
  </fieldset>  
</form>
<style type="text/css">
fieldset {    
   float: left;    
   clear: both;    
   width: 100%;    
   margin: 0 0 -1em 0;      
   padding: 0 0 1em 0;      
   border: 1px solid #BFBAB0;      
   background-color: #F2EFE9; 
}
fieldset:nth-child(even) {
   background-color: #E6E3DD;    
}
form span.fieldset, fieldset span{
   color: maroon;
   display: block;
   margin: 1em;
   text-align: center;
}
form span.fieldset strong, fieldset span strong{
   text-decoration:underline;
   font-weight:bold;
}
fieldset input, fieldset select{
   width:20em;
}
fieldset textarea{
   width:59em;
   height:12em;
}
fieldset input.warning, fieldset textarea.warning{
   border:1px solid red;
}
fieldset span.warning{
   font-weight:bold;
   color:red;
}
input:invalid { 
   border-color: #e88;
   -webkit-box-shadow: 0 0 5px rgba(255, 0, 0, .8);
   -moz-box-shadow: 0 0 5px rbba(255, 0, 0, .8);
   -o-box-shadow: 0 0 5px rbba(255, 0, 0, .8);
   -ms-box-shadow: 0 0 5px rbba(255, 0, 0, .8);
   box-shadow:0 0 5px rgba(255, 0, 0, .8);
}
/*
input:required {
   border-color: #88a;
   -webkit-box-shadow: 0 0 5px rgba(0, 0, 255, .5);
   -moz-box-shadow: 0 0 5px rgba(0, 0, 255, .5);
   -o-box-shadow: 0 0 5px rgba(0, 0, 255, .5);
   -ms-box-shadow: 0 0 5px rgba(0, 0, 255, .5);
   box-shadow: 0 0 5px rgba(0, 0, 255, .5);
}
*/
legend {  
   margin-left: 1em;  
   padding: 0;      
   color: #545351;      
   font-weight: bold;  
}  
label {
   float: left;
   width: 10em;
   margin-right: 1em;
   text-align: right;/* comment to make it left-aligned*/
}
fieldset ol {  
   padding: 1em 1em 0 1em;
   margin:0;
   list-style: none;  
}  
fieldset li {
   float: left;
   /*clear: left;*//* to make it one collumn formed */
   width: 50%;
   padding-bottom: 1em;
   list-style: none;
}
fieldset li.wide {
   width: 100%;
}
fieldset .mandatory::after{
   content:"*";
   color:red;
   font-weight:bold;
}
fieldset.submit {    
   float: none;    
   width: auto;    
   border-style: none;    
   padding-top: 1.5em;      
   /*padding-left: 12em;*/
   text-align: right;
   background-color: transparent;    
}
fieldset.submit input{    
   width: auto;
}
fieldset fieldset{
   border: none;
   background-color: transparent;
}
fieldset fieldset ol{
   padding: 0;
}
</style>
<script type="text/javascript">
(function() {
    var httpRequest;

    document.forms['profile_add'].onsubmit = function(e){
        var empty_mandatory = [];
        for(var max = this.elements.length, i = 0; i < max; i++)
        {
            if(hasClass(this.elements[i], 'mandatory') && this.elements[i].value == '')
            {
                empty_mandatory.push(this.elements[i].value);
                this.elements[i].className = this.elements[i].className + " warning";
            }
            else
            {
                removeClass(this.elements[i], 'warning');
            }
        } 
        
        var messager = document.getElementById('form_message');
        messager.innerHTML = "";
        messages = [];
        
        if(empty_mandatory.length)
        {
            messages.push("Please fill the mandatory fields");
        }
        
        if(messages.length)
        {
            messager.appendChild(document.createTextNode(messages.join("<br/>\n")));
            return false;
        }
        
        //e.preventDefault();
        makeRequest('POST', this.getAttribute('action'), new FormData(this));
        return false
        
        //return true;
    }

    function makeRequest(method, url, data) {
        if (window.XMLHttpRequest) { // Mozilla, Safari, ...
            httpRequest = new XMLHttpRequest();
        } else if (window.ActiveXObject) { // IE
            try {
                httpRequest = new ActiveXObject("Msxml2.XMLHTTP");
            }
            catch (e) {
                try {
                    httpRequest = new ActiveXObject("Microsoft.XMLHTTP");
                } catch (e) {}
            }
        }
        
        if (!httpRequest) {
            alert('Giving up :( Cannot create an XMLHTTP instance');
            return false;
        }

        httpRequest.onreadystatechange = alertContents;
        httpRequest.open(method, url, true);
        httpRequest.send(data);
    }
    
    function alertContents() {
        if (httpRequest.readyState === 4) {
            if (httpRequest.status === 200) {
                var response = JSON.parse(httpRequest.responseText);
                if(response.res !== false)
                {
                    switch (response.operation){
                    case 'insert':
                        var message = ['New profile was succesfully inserted'];
                        break; 
                    case 'update':
                        var message = ['Profile was succesfully updated'];
                        break;
                    default:
                        var message = ['Unknown operation: '+ response.operation];
                    }

                    var color   = 'green';
                    document.forms['profile_add'].reset()
                }
                else
                {
                    var message = ['Error occurs during profile saving'];
                    var color   = 'red';
                    if(response.invalid)
                    {
                        var err = [];
                        for(var max = response.invalid.length, i = 0; i < max; i++)
                        {
                            addClass('warning', document.getElementById(response.invalid[i]))
                            err.push(response.invalid[i]);
                        }
                        
                        message.push('Invalid field(s): ' + err.join(', '));
                    }

                    if(response.absent)
                    {
                        var err = [];
                        for(var max = response.absent.length, i = 0; i < max; i++)
                        {
                            addClass('warning', document.getElementById(response.absent[i]))
                            err.push(response.absent[i]);
                        }
                        
                        message.push('Missed mandatory field(s): ' + err.join(', '));
                    }
                }
                
                var messageElm = document.getElementById('profile_massage');
                messageElm.setAttribute('style', 'text-align:center;margin:10px;color:'+color);
                messageElm.innerHTML = '';
                for(var max=message.length, i=0; i<max; i++)
                {
                    //var input_field = document.getElementById(i);
                    //addClass(input_field, 'warning');
                    messageElm.appendChild(document.createTextNode(message[i]));
                    messageElm.appendChild(document.createElement("br"));
                }
                console.log(response);
            } else {
                alert('There was a problem with the request.');
            }
        }
    }
    
    function hasClass(element, cls) {
        return (' ' + element.className + ' ').indexOf(' ' + cls + ' ') > -1;
    }
    
    function addClass(element, cls){
        if(!hasClass(element, cls)){
            element.className = element.className +' '+ cls;
        }
    }
    
    function removeClass(element, cls){
        var classes = element.className.split(/\s+/);
        var idx = classes.indexOf(cls);
        if(idx > -1)
        {
            classes.splice(idx, 1);
        }
        
        element.className = classes.join(" ");
    }
})();
</script>
